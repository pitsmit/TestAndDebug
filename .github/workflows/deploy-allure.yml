name: Deploy Allure Report to Pages

on:
  workflow_run:
    workflows: ["Node.js Tests in Docker Container"]
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.conclusion == 'failure' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download unit/integration test artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const runId = context.payload.workflow_run.id;
            
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner,
              repo,
              run_id: runId,
            });
            
            // Скачиваем оба артефакта
            const downloadArtifact = async (artifactName) => {
              const artifact = artifacts.data.artifacts.find(a => a.name === artifactName);
              if (artifact) {
                const download = await github.rest.actions.downloadArtifact({
                  owner,
                  repo,
                  artifact_id: artifact.id,
                  archive_format: 'zip',
                });
                const fs = require('fs');
                fs.writeFileSync(`${{github.workspace}}/${artifactName}.zip`, Buffer.from(download.data));
                console.log(`✅ ${artifactName} artifact downloaded successfully`);
                return true;
              } else {
                console.log(`❌ No ${artifactName} artifact found`);
                return false;
              }
            };
            
            await downloadArtifact('unit-integration-test-results');
            await downloadArtifact('e2e-test-results');

      - name: Unzip artifacts
        run: |
          mkdir -p extracted-unit-integration
          mkdir -p extracted-e2e
          
          if [ -f "unit-integration-test-results.zip" ]; then
            unzip -q unit-integration-test-results.zip -d extracted-unit-integration
          fi
          
          if [ -f "e2e-test-results.zip" ]; then
            unzip -q e2e-test-results.zip -d extracted-e2e
          fi
          
          echo "=== Unit/Integration contents ==="
          find extracted-unit-integration -type f -name "*.json" | head -5 || echo "No unit/integration results"
          echo "=== E2E contents ==="
          find extracted-e2e -type f -name "*.json" | head -5 || echo "No E2E results"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Allure
        run: |
          npm install -g allure-commandline

      - name: Merge and generate Allure HTML Report
        run: |
          mkdir -p allure-report
          mkdir -p allure-history
          mkdir -p merged-results
          
          # Копируем историю из предыдущих запусков если есть
          if [ -d "extracted-unit-integration/allure-history" ]; then
            echo "Found unit/integration allure history"
            cp -r extracted-unit-integration/allure-history/. allure-history/
          fi
          
          # Копируем результаты тестов
          if [ -d "extracted-unit-integration/test-results" ]; then
            echo "Copying unit/integration test results"
            cp -r extracted-unit-integration/test-results/* merged-results/ 2>/dev/null || true
          fi
          
          if [ -d "extracted-e2e/test-results-e2e" ]; then
            echo "Copying E2E test results"
            cp -r extracted-e2e/test-results-e2e/* merged-results/ 2>/dev/null || true
          fi
          
          # Генерируем объединенный отчет
          if [ "$(ls -A merged-results 2>/dev/null)" ]; then
            echo "Generating combined report from all test results"
            allure generate merged-results -o allure-report --clean --history-dir allure-history
          else
            echo "❌ No test results found"
            find . -name "*.json" -type f | head -10
            exit 1
          fi
          
          # Сохраняем историю для следующего запуска
          cp -r allure-history/. allure-report/history/ || echo "No history to copy"
          
          echo "=== Allure report contents ==="
          ls -la allure-report/
          echo "=== Test types in report ==="
          find allure-report -name "*.html" -type f | head -10

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './allure-report/'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4